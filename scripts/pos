#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import os
import getpass
from pathlib import Path
import sys
import shutil
import subprocess

import click


ROOT = Path(__file__).resolve().parents[1]

TARGET_KERNEL = ROOT / 'targets' / 'x86_64-os.json'
TARGET_BOOTLOADER = 'x86_64-unknown-uefi'


class FatalError(Exception):
    pass


@click.group()
def pos():
    """
    Command line tool for platypos
    """
    pass


def exec_command(args, cwd=None):
    try:
        return subprocess.call(args, cwd=cwd)
    except Exception as ex:
        click.echo(u"‚ùå Running " + click.style(" ".join(args), fg="red") + " failed", err=True)
        click.secho(str(ex), fg="red", err=True)
        return 1


def build_package(name, target = None, features = []):
    args = ['cargo', 'xbuild' if target else 'build', '-p', name]
    if target:
        args.extend(['--target', target])
    if features:
        args.extend(['--features', ' '.join(features)])
    if exec_command(args, cwd=ROOT) != 0:
        click.secho(f"Building {name} failed", fg="red", err=True)
        raise FatalError


@pos.command()
def prereqs():
    exec_command(['cargo', 'install', 'cargo-xbuild', '--force'])
    exec_command(['rustup', 'component', 'add', 'rust-src'])
    exec_command(['rustup', 'component', 'add', 'llvm-tools-preview'])


@pos.command()
def build():
    build_package('platypos_kernel', target=TARGET_KERNEL)
    build_package('platypos_loader', target=TARGET_BOOTLOADER)
    build_package('platypos_runner')


@pos.command()
@click.option('--debug/--no-debug', default=False)
def run(debug):
    click.secho(u"üèÉ‚Äç Running in QEMU", fg="blue")
    build_package('platypos_runner') # Not built by cargo-xrun
    args = ['cargo', 'xrun', '--target', TARGET_KERNEL, '-p', 'platypos_kernel']

    if debug:
        args.extend(['--', '-d'])

    exec_command(args)


@pos.command()
@click.option('--debug/--no-debug', default=False)
def test(debug):
    click.secho("Testing kernel", fg="blue")
    build_package('platypos_runner')
    args = ['cargo', 'xtest', '--target', TARGET_KERNEL, '-p', 'platypos_kernel']
    if debug:
        args.extend(['--', '-d'])
    exec_command(args)


if __name__ == '__main__':
    try:
        pos()
    except FatalError:
        sys.exit(1)

#!/usr/bin/env python
# -*- coding: utf-8 -*-

import os
import getpass
import subprocess
import shutil

import click


# There's some weird interaction between vboxsf and rust-lld, this seems
# like a decent enough workaround
if getpass.getuser() == 'vagrant':
    os.environ['CARGO_TARGET_DIR'] = '/home/vagrant/cargo-target'


def kernel_binary():
    """
    Get the path to the kernel ELF binary
    """
    target_dir = os.environ.get('CARGO_TARGET_DIR', 'target')
    return os.path.join(target_dir, 'x86_64-os/debug/kernel')


def exec_command(args, cwd=None):
    try:
        return subprocess.call(args, cwd=cwd)
    except Exception as ex:
        click.echo(u"‚ùå Running " + click.style(" ".join(args), fg="red") + " failed", err=True)
        click.secho(str(ex), fg="red", err=True)
        return 1


def build_image():
    return exec_command(['bootimage', 'build', '--manifest-path', 'kernel/Cargo.toml']) == 0


@click.group()
def pos():
    """
    Command line tool for platypos
    """
    pass


@pos.command()
def prereqs():
    exec_command(['cargo', 'install', 'bootimage', 'cargo-xbuild', '--force'])
    exec_command(['rustup', 'component', 'add', 'rust-src'])
    exec_command(['rustup', 'component', 'add', 'llvm-tools-preview'])


@pos.command()
@click.option('--remote/--no-remote', default=False)
def build(remote):
    click.secho(u"üõ†  Building PlatypOS", fg="blue")
    if not build_image():
        click.secho(u"‚ùå Build failed")
    if remote:
        shutil.copyfile(kernel_binary(), 'target/debug-kernel')


@pos.command()
@click.option('--debug/--no-debug', default=False)
def run(debug):
    click.secho(u"üèÉ‚Äç Running in QEMU", fg="blue")
    args = ['cargo', 'xrun']

    if debug:
        args.extend(['--', '-s', '-S'])

    # xrun doesn't seem to work with -p
    exec_command(args, cwd="platypos_x86_64")


@pos.command()
def debug():
    click.secho(u"Connecting to GDB", fg="blue")
    exec_command(['rust-gdb', kernel_binary(), '-x', 'init.gdb'])


if __name__ == '__main__':
    root = os.path.join(os.path.dirname(os.path.abspath(__file__)), '..')
    os.chdir(root)
    pos()
